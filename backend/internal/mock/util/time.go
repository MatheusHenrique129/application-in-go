// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/util/time.go

// Package mock_util is a generated GoMock package.
package mock_util

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockTimeHelper is a mock of TimeHelper interface.
type MockTimeHelper struct {
	ctrl     *gomock.Controller
	recorder *MockTimeHelperMockRecorder
}

// MockTimeHelperMockRecorder is the mock recorder for MockTimeHelper.
type MockTimeHelperMockRecorder struct {
	mock *MockTimeHelper
}

// NewMockTimeHelper creates a new mock instance.
func NewMockTimeHelper(ctrl *gomock.Controller) *MockTimeHelper {
	mock := &MockTimeHelper{ctrl: ctrl}
	mock.recorder = &MockTimeHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTimeHelper) EXPECT() *MockTimeHelperMockRecorder {
	return m.recorder
}

// GetCurrentUnixMilliseconds mocks base method.
func (m *MockTimeHelper) GetCurrentUnixMilliseconds() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentUnixMilliseconds")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetCurrentUnixMilliseconds indicates an expected call of GetCurrentUnixMilliseconds.
func (mr *MockTimeHelperMockRecorder) GetCurrentUnixMilliseconds() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentUnixMilliseconds", reflect.TypeOf((*MockTimeHelper)(nil).GetCurrentUnixMilliseconds))
}

// GetCurrentUtcDateTime mocks base method.
func (m *MockTimeHelper) GetCurrentUtcDateTime() time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentUtcDateTime")
	ret0, _ := ret[0].(time.Time)
	return ret0
}

// GetCurrentUtcDateTime indicates an expected call of GetCurrentUtcDateTime.
func (mr *MockTimeHelperMockRecorder) GetCurrentUtcDateTime() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentUtcDateTime", reflect.TypeOf((*MockTimeHelper)(nil).GetCurrentUtcDateTime))
}

// Sleep mocks base method.
func (m *MockTimeHelper) Sleep(d time.Duration) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Sleep", d)
}

// Sleep indicates an expected call of Sleep.
func (mr *MockTimeHelperMockRecorder) Sleep(d interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sleep", reflect.TypeOf((*MockTimeHelper)(nil).Sleep), d)
}
